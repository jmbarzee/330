   :-  ensure_loaded([suduko]).

   
test1() :-
	Board =
		[[2, _, _, _, 8, 7, _, 5, _],
		 [_, _, _, _, 3, 4, 9, _, 2],
		 [_, _, 5, _, _, _, _, _, 8],
		 [_, 6, 4, 2, 1, _, _, 7, _],
		 [7, _, 2, _, 6, _, 1, _, 9],
		 [_, 8, _, _, 7, 3, 2, 4, _],
		 [8, _, _, _, _, _, 4, _, _],
		 [3, _, 9, 7, 4, _, _, _, _],
		 [_, 1, _, 8, 2, _, _, _, 5]],
	solve(Board),
	printBoard(Board), nl,
	Board =
		[[2, 9, 3, 1, 8, 7, 6, 5, 4],
		 [6, 7, 8, 5, 3, 4, 9, 1, 2],
		 [1, 4, 5, 6, 9, 2, 7, 3, 8],
		 [9, 6, 4, 2, 1, 8, 5, 7, 3],
		 [7, 3, 2, 4, 6, 5, 1, 8, 9],
		 [5, 8, 1, 9, 7, 3, 2, 4, 6],
		 [8, 2, 6, 3, 5, 1, 4, 9, 7],
		 [3, 5, 9, 7, 4, 6, 8, 2, 1],
		 [4, 1, 7, 8, 2, 9, 3, 6, 5]],
	printBoard(Board), nl, nl.
 
test2() :-
	Board = 
		[[_, _, _, 7, 9, _, 8, _, _],
		 [_, _, _, _, _, 4, 3, _, 7],
		 [_, _, _, 3, _, _, _, 2, 9],
		 [7, _, _, _, 2, _, _, _, _],
		 [5, 1, _, _, _, _, _, 4, 8],
		 [_, _, _, _, 5, _, _, _, 1],
		 [1, 2, _, _, _, 8, _, _, _],
		 [6, _, 4, 1, _, _, _, _, _],
		 [_, _, 3, _, 6, 2, _, _, _]],
	solve(Board),
	printBoard(Board), nl,
	Board = 
		[[2, 3, 1, 7, 9, 6, 8, 5, 4],
		 [9, 8, 5, 2, 1, 4, 3, 6, 7],
		 [4, 6, 7, 3, 8, 5, 1, 2, 9],
		 [7, 9, 8, 4, 2, 1, 5, 3, 6],
		 [5, 1, 2, 6, 3, 9, 7, 4, 8],
		 [3, 4, 6, 8, 5, 7, 2, 9, 1],
		 [1, 2, 9, 5, 4, 8, 6, 7, 3],
		 [6, 5, 4, 1, 7, 3, 9, 8, 2],
		 [8, 7, 3, 9, 6, 2, 4, 1, 5]],
	printBoard(Board), nl, nl.

test3() :-
	Board = 
		[[_, 2, _, _, _, _, _, _, _],
		 [_, _, _, 6, _, _, _, _, 3],
		 [_, 7, 4, _, 8, _, _, _, _],
		 [_, _, _, _, _, 3, _, _, 2],
		 [_, 8, _, _, 4, _, _, 1, _],
		 [6, _, _, 5, _, _, _, _, _],
		 [_, _, _, _, 1, _, 7, 8, _],
		 [5, _, _, _, _, 9, _, _, _],
		 [_, _, _, _, _, _, _, 4, _]],
	solve(Board),
	printBoard(Board), nl,
	Board = 
		[[1, 2, 6, 4, 3, 7, 9, 5, 8],
		 [8, 9, 5, 6, 2, 1, 4, 7, 3],
		 [3, 7, 4, 9, 8, 5, 1, 2, 6],
		 [4, 5, 7, 1, 9, 3, 8, 6, 2],
		 [9, 8, 3, 2, 4, 6, 5, 1, 7],
		 [6, 1, 2, 5, 7, 8, 3, 9, 4],
		 [2, 6, 9, 3, 1, 4, 7, 8, 5],
		 [5, 4, 8, 7, 6, 9, 2, 3, 1],
		 [7, 3, 1, 8, 5, 2, 6, 4, 9]],
	printBoard(Board), nl, nl.

test4() :-
	Board = 
		[[8, _, _, _, _, _, _, _, _],
		 [_, _, 3, 6, _, _, _, _, _],
		 [_, 7, _, _, 9, _, 2, _, _],
		 [_, 5, _, _, _, 7, _, _, _],
		 [_, _, _, _, 4, 5, 7, _, _],
		 [_, _, _, 1, _, _, _, 3, _],
		 [_, _, 1, _, _, _, _, 6, 8],
		 [_, _, 8, 5, _, _, _, 1, _],
		 [_, 9, _, _, _, _, 4, _, _]],
	solve(Board),
	printBoard(Board), nl,
	Board = 
		[[8, 1, 2, 7, 5, 3, 6, 4, 9],
		 [9, 4, 3, 6, 8, 2, 1, 7, 5],
		 [6, 7, 5, 4, 9, 1, 2, 8, 3],
		 [1, 5, 4, 2, 3, 7, 8, 9, 6],
		 [3, 6, 9, 8, 4, 5, 7, 2, 1],
		 [2, 8, 7, 1, 6, 9, 5, 3, 4],
		 [5, 2, 1, 9, 7, 4, 3, 6, 8],
		 [4, 3, 8, 5, 2, 6, 9, 1, 7],
		 [7, 9, 6, 3, 1, 8, 4, 5, 2]],
	printBoard(Board), nl, nl.

tests() :-
	test1(),
	test2(),
	test3(),
	test4().

:- initialization(main).
main :- tests(), halt.